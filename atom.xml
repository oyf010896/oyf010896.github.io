<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>帆大腿的博客</title>
  
  <subtitle>爱榕榕爱做饭给你吃</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-29T06:13:34.817Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>帆大腿</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>filecoin日常维护常用命令</title>
    <link href="http://example.com/2022/07/29/filecoin/"/>
    <id>http://example.com/2022/07/29/filecoin/</id>
    <published>2022-07-29T04:27:29.000Z</published>
    <updated>2022-07-29T06:13:34.817Z</updated>
    
    <content type="html"><![CDATA[<p>1、暂停apx任务派发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lotus-miner worker-pause -uuid 2dcb294a-f981-450b-a3ea-0131e13f0893 --tt ap</span><br></pre></td></tr></table></figure><p>2、放弃任务（先abort,在removed）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lotus-miner sealing <span class="built_in">jobs</span> |grep -w <span class="string">&#x27;f01038389-p1-172-20-6-69&#x27;</span> | awk <span class="string">&#x27;&#123;print &quot;lotus-miner sealing abort &quot; $1&quot; &amp;&amp; lotus-miner sectors update-state --really-do-it &quot;$2&quot; Removed&quot; &#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>3、在日志中过滤删除失败扇区并删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -80 /opt/raid0/lotusminer/logs| egrep <span class="string">&quot;(SealPreCommit2Failed|SealPreCommit1Failed|CommitFailed|CommitFinalizeFailed)&quot;</span> |awk <span class="string">&#x27;&#123;print $5&#125;&#x27;</span> | grep <span class="string">&#x27;,&#x27;</span> | egrep <span class="string">&#x27;[0-9]&#123;3,6&#125;&#x27;</span> -o |awk <span class="string">&#x27;&#123;print &quot;lotus-miner sectors update-state --really-do-it &quot; $1 &quot; Removed&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>4、批量移除worker任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lotus-miner sealing workers | awk <span class="string">&#x27;/f0469055-p1-192-168-31-223/&#123;print $2&#125;&#x27;</span>| <span class="built_in">tr</span> <span class="string">&#x27;,&#x27;</span> <span class="string">&#x27; &#x27;</span> | awk <span class="string">&#x27;&#123;print &quot;lotus-miner worker-remove --uuid&quot;,$1&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>5、更改失败扇区状态为remove</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lotus-miner sectors update-state --really-do-it 85823 Removed</span><br></pre></td></tr></table></figure><p>6、抽奖次数 isEligible true</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;isEligible.*true&#x27;</span> /opt/raid0/lotusminer/logs |grep <span class="string">&#x27;2021-08-05&#x27;</span>|<span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><p>7、中奖次数 isWinner true</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;&quot;isEligible&quot;: true&#x27;</span> /opt/raid0/lotusminer/logs|grep <span class="string">&#x27;&quot;isWinner&quot;: true&#x27;</span></span><br></pre></td></tr></table></figure><p>8、查看日志是否孤块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;2021-08-12&#x27;</span> /opt/raid0/lotusminer/logs|grep <span class="string">&#x27;mined new block&#x27;</span></span><br><span class="line">看是否超时 看took时间 Winning Post用时，tooks对应值表示Winning Post完成时间，单位秒；超过25秒则有问题。</span><br></pre></td></tr></table></figure><p>9、停止落盘任务修改落盘速率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lotus-miner worker-pause --uuid all --tt fin</span><br><span class="line">lotus-miner update-params-fin --tickets 45 --interval 6</span><br></pre></td></tr></table></figure><p>10、组raid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mdadm  --stop /dev/md*</span><br><span class="line">mdadm --misc --zero-superblock   /dev/nvme*n1</span><br><span class="line">组raid0</span><br><span class="line">mdadm -Cv /dev/md0 -a <span class="built_in">yes</span> -n 8  -l 0 /dev/nvme0n1   /dev/nvme1n1 /dev/nvme2n1  /dev/nvme3n1 /dev/nvme4n1 /dev/nvme5n1 /dev/nvme6n1 /dev/nvme7n1</span><br><span class="line">mdadm -Cv /dev/md0 -a <span class="built_in">yes</span> -n 4 -l 0 /dev/nvme0n1  /dev/nvme1n1  /dev/nvme2n1  /dev/nvme3n1</span><br><span class="line">mdadm -D --scan &gt;/etc/mdadm.conf</span><br><span class="line">mkfs.xfs -f /dev/md0</span><br><span class="line"><span class="built_in">ls</span> -l /dev/disk/by-uuid/|awk <span class="string">&#x27;/md0/&#123;print &quot;echo \&quot;/dev/disk/by-uuid/&quot;$9&quot; /opt/raid0 xfs defaults 0 0\&quot; &gt;&gt;/etc/fstab&quot;&#125;&#x27;</span>|bash </span><br><span class="line"><span class="built_in">mkdir</span> /opt/raid0 -p</span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><p>注：mdadm 命令用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">mdadm 使用参数</span><br><span class="line">-a 检测设备名称；添加磁盘</span><br><span class="line">-n 指定设备数量</span><br><span class="line">-l 指定RAID级别</span><br><span class="line">-C 创建</span><br><span class="line">-v 显示创建过程</span><br><span class="line">-f 模拟设备损坏</span><br><span class="line">-r 移除设备</span><br><span class="line">-Q 查看摘要信息</span><br><span class="line">-D 查看详细信息</span><br><span class="line">-S 停止RAID磁盘阵列</span><br><span class="line">-x 备份盘</span><br><span class="line"></span><br><span class="line">启动raid</span><br><span class="line">[root@node1 ~]<span class="comment"># mdadm -As /dev/md0</span></span><br><span class="line">mdadm: Fail to create md0 when using /sys/module/md_mod/parameters/new_array, fallback to creation via node</span><br><span class="line">mdadm: /dev/md0 has been started with 2 drives.</span><br><span class="line"></span><br><span class="line">raid模拟故障  </span><br><span class="line">[root@node1 mnt]<span class="comment"># mdadm --manage --set-faulty /dev/md0 /dev/sdc</span></span><br><span class="line">mdadm: <span class="built_in">set</span> /dev/sdc faulty <span class="keyword">in</span> /dev/md0</span><br><span class="line"></span><br><span class="line">raid 里面移除坏掉硬盘</span><br><span class="line">[root@node1 mnt]<span class="comment"># mdadm  /dev/md0 -r /dev/sdc</span></span><br><span class="line">mdadm: hot removed /dev/sdc from /dev/md0</span><br><span class="line"></span><br><span class="line">raid 添加新的硬盘</span><br><span class="line">[root@node1 mnt]<span class="comment"># mdadm  /dev/md0 --add /dev/sdc</span></span><br><span class="line">mdadm: re-added /dev/sdc</span><br><span class="line"></span><br><span class="line">raid 添加硬盘后 查看状态</span><br><span class="line">[root@node1 mnt]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">/dev/md0:</span><br><span class="line">          Version : 1.2</span><br><span class="line">    Creation Time : Fri Jan 22 13:02:53 2021</span><br><span class="line">       Raid Level : raid1</span><br><span class="line">       Array Size : 9766304768 (9.10 TiB 10.00 TB)</span><br><span class="line">    Used Dev Size : 9766304768 (9.10 TiB 10.00 TB)</span><br><span class="line">     Raid Devices : 2</span><br><span class="line">    Total Devices : 2</span><br><span class="line">      Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">    Intent Bitmap : Internal</span><br><span class="line"></span><br><span class="line">      Update Time : Fri Jan 22 13:34:32 2021</span><br><span class="line">            State : active, degraded, recovering</span><br><span class="line">   Active Devices : 1</span><br><span class="line">  Working Devices : 2</span><br><span class="line">   Failed Devices : 0</span><br><span class="line">    Spare Devices : 1</span><br><span class="line"></span><br><span class="line">Consistency Policy : unknown</span><br><span class="line"></span><br><span class="line">   Rebuild Status : 2% complete</span><br><span class="line"></span><br><span class="line">             Name : node1:0  (<span class="built_in">local</span> to host node1)</span><br><span class="line">             UUID : e11bea7b:ecb81ce2:e7d46423:367a4f82</span><br><span class="line">           Events : 264</span><br><span class="line"></span><br><span class="line">   Number   Major   Minor   RaidDevice State</span><br><span class="line">      0       8       32        0      spare rebuilding   /dev/sdc</span><br><span class="line">      1       8      112        1      active <span class="built_in">sync</span>   /dev/sdh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止解散raid</span></span><br><span class="line">使用--stop或-S命令选项可以停止运行的阵列(注意： 停止前必须先umount)：</span><br><span class="line"></span><br><span class="line">[root@localhost eric4ever]<span class="comment"># umount /mnt/md0</span></span><br><span class="line">[root@localhost eric4ever]<span class="comment"># mdadm -S /dev/md0 (或mdadm --stop /dev/md0)</span></span><br><span class="line">mdadm: stopped /dev/md0</span><br><span class="line"></span><br><span class="line">[root@node1 ~]<span class="comment"># mdadm  --stop /dev/md0</span></span><br><span class="line">mdadm: stopped /dev/md0</span><br><span class="line"></span><br><span class="line">移除raid</span><br><span class="line">mdadm --remove /dev/md0</span><br><span class="line"></span><br><span class="line">清除raid信息</span><br><span class="line">mdadm --misc --zero-superblock /dev/sdb</span><br></pre></td></tr></table></figure><p>11、处理remove扇区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ll /opt/raid0/workercache/unsealed/ | awk <span class="string">&#x27;&#123;print $9&#125;&#x27;</span> | awk -F<span class="string">&#x27;-&#x27;</span> <span class="string">&#x27;&#123;print $3&#125;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">cat</span> /tmp/tmp.tmp`;<span class="keyword">do</span> lotus-miner sectors status <span class="variable">$i</span>|<span class="built_in">head</span>  -n2;<span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">cat</span> /tmp/tmp.tmp `;<span class="keyword">do</span> <span class="built_in">rm</span> -rf /opt/raid0/workercache/*/*<span class="variable">$i</span>*;<span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、暂停apx任务派发&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CDH6的部署和安装</title>
    <link href="http://example.com/2022/07/29/CDH6/"/>
    <id>http://example.com/2022/07/29/CDH6/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:20:36.280Z</updated>
    
    <content type="html"><![CDATA[<p>CDH6</p><h4 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h4><p>​        CDH，全称Cloudera’s Distribution, including Apache Hadoop。是Hadoop众多分支中对应中的一种，由Cloudera维护，基于稳定版本的Apache Hadoop构建，提供了Hadoop的核心（可扩展存储、分布式计算），最为重要的是提供基于web的用户界面。</p><p>　　CDH的优点：版本划分清晰，更新速度快，支持Kerberos安全认证，支持多种安装方式（如Yum、rpm等）。</p><p>　　CDH分为Cloudera Manager管理平台和CDH parcel（parcel包含各种组件的安装包）。这里采用CDH6.2.0。</p><p>  下载：</p><p>   Cloudera Manger下载地址为<a href="https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/RPMS/x86_64/%EF%BC%8C">https://archive.cloudera.com/cm6/6.2.0/redhat7/yum/RPMS/x86_64/，</a></p><p>   CDH6.2.0安装包地址为：<a href="https://archive.cloudera.com/cdh6/6.2.0/parcels/">https://archive.cloudera.com/cdh6/6.2.0/parcels/</a></p><h4 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2. 安装步骤"></a>2. 安装步骤</h4><p>说明：以下操作都是在root用户下进行的</p><h5 id="2-1-环境准备"><a href="#2-1-环境准备" class="headerlink" title="2.1 环境准备"></a>2.1 环境准备</h5><h6 id="2-1-1-静态IP设置（每个节点）"><a href="#2-1-1-静态IP设置（每个节点）" class="headerlink" title="2.1.1. 静态IP设置（每个节点）"></a>2.1.1. 静态IP设置（每个节点）</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line"> </span><br><span class="line">service network restart 重启网络生效</span><br><span class="line"> </span><br><span class="line">yum install -y net-tools ifconfig查看设置</span><br></pre></td></tr></table></figure><h6 id="2-1-2-编辑-x2F-etc-x2F-hosts文件（每个节点）"><a href="#2-1-2-编辑-x2F-etc-x2F-hosts文件（每个节点）" class="headerlink" title="2.1.2. 编辑&#x2F;etc&#x2F;hosts文件（每个节点）"></a>2.1.2. 编辑&#x2F;etc&#x2F;hosts文件（每个节点）</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">ip    主机名</span><br></pre></td></tr></table></figure><h6 id="2-1-3-关闭防火墙、禁止防火墙开机自启（每个节点）"><a href="#2-1-3-关闭防火墙、禁止防火墙开机自启（每个节点）" class="headerlink" title="2.1.3. 关闭防火墙、禁止防火墙开机自启（每个节点）"></a>2.1.3. 关闭防火墙、禁止防火墙开机自启（每个节点）</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- systemctl stop firewalld 关闭防火墙</span><br><span class="line">- systemctl disable firewalld 禁止防火墙开机自启</span><br><span class="line">- vim /etc/selinux/config —&gt; SELINUX=disabled (修改)</span><br><span class="line">getenforce 0</span><br></pre></td></tr></table></figure><h6 id="2-1-4-ssh无密码登录"><a href="#2-1-4-ssh无密码登录" class="headerlink" title="2.1.4. ssh无密码登录"></a>2.1.4. ssh无密码登录</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -b 4096 -t rsa</span><br><span class="line">ssh-copy-id username@remote-server</span><br></pre></td></tr></table></figure><h6 id="2-1-5-配置NTP服务（所有节点）"><a href="#2-1-5-配置NTP服务（所有节点）" class="headerlink" title="2.1.5. 配置NTP服务（所有节点）"></a>2.1.5. 配置NTP服务（所有节点）</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">•修改时区（改为中国标准时区）ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"> •安装ntp yum -y install ntp</span><br><span class="line"> •ntp主机配置 vim /etc/ntp.conf</span><br><span class="line"> •manager节点</span><br><span class="line"> 注释掉原有配置 </span><br><span class="line"> server ntp.aliyun.com (阿里云的时间服务器)</span><br><span class="line"> •其他节点</span><br><span class="line"> server  manager主机名</span><br><span class="line"> •重新启动 ntp 服务：service ntpd restart</span><br><span class="line"> •设置开机自启：systemctl enable ntpd.service</span><br><span class="line"> •ntpdc -c loopinfo #查看与时间同步服务器的时间偏差</span><br><span class="line"> •ntpq -p #查看当前同步的时间服务器</span><br><span class="line"> •ntpstat #查看状态</span><br></pre></td></tr></table></figure><h6 id="2-1-6-禁用透明页-所有节点）"><a href="#2-1-6-禁用透明页-所有节点）" class="headerlink" title="2.1.6. 禁用透明页(所有节点）"></a>2.1.6. 禁用透明页(所有节点）</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line">永久生效 在/etc/rc.local 添加上面命令</span><br></pre></td></tr></table></figure><h6 id="2-1-7-JDK安装（所有节点）"><a href="#2-1-7-JDK安装（所有节点）" class="headerlink" title="2.1.7. JDK安装（所有节点）"></a>2.1.7. JDK安装（所有节点）</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">•rpm -qa | grep java # 查询已安装的java</span><br><span class="line">•yum remove java* # 卸载</span><br><span class="line"> •rpm -ivh oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpm</span><br><span class="line"> •vi /etc/profile 末尾添加</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">set</span> java <span class="built_in">env</span></span></span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_271</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"> •source /etc/profile</span><br><span class="line"> •java -version 验证</span><br></pre></td></tr></table></figure><h6 id="2-1-8-安装httpd服务"><a href="#2-1-8-安装httpd服务" class="headerlink" title="2.1.8.安装httpd服务"></a>2.1.8.安装httpd服务</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl enable httpd.service （设置httpd服务开机自启）</span><br></pre></td></tr></table></figure><h6 id="2-1-9-配置Cloudera-Manager包yum源（在mdw机器上操作）"><a href="#2-1-9-配置Cloudera-Manager包yum源（在mdw机器上操作）" class="headerlink" title="2.1.9.配置Cloudera Manager包yum源（在mdw机器上操作）"></a>2.1.9.配置Cloudera Manager包yum源（在mdw机器上操作）</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/www/html/cloudera-repos/cm6/  然后将下载的文件传到该目录下，</span><br></pre></td></tr></table></figure><p>创建repodata，执行  createrepo . </p><p>创建完成后会在当前目录下生成一个repodata文件夹，如下图所示，如果系统提示找不到createrepo命令，需要执行yum install createrepo.noarch 进行安装</p><p>2.1.10.安装 Cloudera Manager（在mdw机器上操作）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建yum源：</span><br><span class="line">cd /etc/yum.repos.d</span><br><span class="line">vim cloudera-manager.repo ， 按下图内容进行配置</span><br><span class="line">[cloudera-manager]</span><br><span class="line">name = Cloudera Manager, Version</span><br><span class="line">baseurl = http://ip/cloudera-repos/cm6/</span><br><span class="line">gpcheck = 0</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line">yum install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server</span><br></pre></td></tr></table></figure><p>安装成功后，将 CDH-6.2.1-1.cdh6.2.1.p0.4951328-el7.parcel、CDH-6.2.1-1.cdh6.2.1.p0.4951328-el7.parcel.sha1、CDH-6.2.1-1.cdh6.2.1.p0.4951328-el7.parcel.sha256拷贝到 &#x2F;opt&#x2F;cloudera&#x2F;parcel-repo&#x2F;目录中，并且拷贝一份CDH-6.2.1-1.cdh6.2.1.p0.4951328-el7.parcel.sha1文件命名为CDH-6.2.1-1.cdh6.2.1.p0.4951328-el7.parcel.sha，如下图所示：</p><p>&#x2F;opt&#x2F;cloudera&#x2F;parcel-repo&#x2F;下有这些文件</p><p> mysql需要建的库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">create database cmserver default charset utf8 collate utf8_general_ci;</span><br><span class="line">grant all on cmserver.* to &#x27;cmserveruser&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">create database metastore default charset utf8 collate utf8_general_ci;</span><br><span class="line">grant all on metastore.* to &#x27;hiveuser&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">create database amon default charset utf8 collate utf8_general_ci;</span><br><span class="line">grant all on amon.* to &#x27;amonuser&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">create database rman default charset utf8 collate utf8_general_ci;</span><br><span class="line">grant all on rman.* to &#x27;rmanuser&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">create database oozie default charset utf8 collate utf8_general_ci;</span><br><span class="line">grant all on oozie.* to &#x27;oozieuser&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27;;</span><br><span class="line"></span><br><span class="line">create database hue default charset utf8 collate utf8_general_ci;</span><br><span class="line">grant all on hue.* to &#x27;hueuser&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27;;</span><br></pre></td></tr></table></figure><p>2.1.11执行初始化脚本（在mdw机器上操作）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">•/opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm password</span><br></pre></td></tr></table></figure><p>执行成功后，启动server服务 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service cloudera-scm-server start</span><br></pre></td></tr></table></figure><p>查看端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lanp | grep 7180</span><br></pre></td></tr></table></figure><p>查看进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pa -aux |grep cloudera </span><br></pre></td></tr></table></figure><p>浏览器访问</p><p><a href="http://主机ip:7180/cmf/login">http:&#x2F;&#x2F;主机ip:7180&#x2F;cmf&#x2F;login</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;CDH6&lt;/p&gt;
&lt;h4 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.概述&quot;&gt;&lt;/a&gt;1.概述&lt;/h4&gt;&lt;p&gt;​        CDH，全称Cloudera’s Distribution, including </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>fastDFS安装搭建</title>
    <link href="http://example.com/2022/07/29/fastdfs/"/>
    <id>http://example.com/2022/07/29/fastdfs/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:07:10.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="fastDFS安装搭建"><a href="#fastDFS安装搭建" class="headerlink" title="fastDFS安装搭建"></a>fastDFS安装搭建</h1><h3 id="FastDFS环境搭建"><a href="#FastDFS环境搭建" class="headerlink" title="FastDFS环境搭建"></a>FastDFS环境搭建</h3><h5 id="1、首先检查下安装环境-按照顺序执行一下命令"><a href="#1、首先检查下安装环境-按照顺序执行一下命令" class="headerlink" title="1、首先检查下安装环境, 按照顺序执行一下命令"></a>1、首先检查下安装环境, 按照顺序执行一下命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ autoconf pcre pcre-devel make automake</span><br><span class="line">yum -y install wget httpd-tools vim</span><br></pre></td></tr></table></figure><p>1.2、安装包下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/happyfish100/libfastcommon/archive/V1.0.7.tar.gz</span><br><span class="line">wget http://jaist.dl.sourceforge.net/project/fastdfs/FastDFS%20Nginx%20Module%20Source%20Code/fastdfs-nginx-module_v1.16.tar.gz</span><br><span class="line">wget https://github.com/happyfish100/fastdfs/archive/V5.05.tar.gz</span><br><span class="line">wget http://nginx.org/download/nginx-1.12.1.tar.gz</span><br></pre></td></tr></table></figure><h5 id="2、安装libfastcommon工程"><a href="#2、安装libfastcommon工程" class="headerlink" title="2、安装libfastcommon工程"></a>2、安装<strong>libfastcommon</strong>工程</h5><p>   2.1、解压<strong>libfastcommon</strong>工程到目标路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip libfastcommon-master.zip -d /opt/module/</span><br></pre></td></tr></table></figure><p>   2.2、进入解压的libfastcommon目录进行编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/module</span><br><span class="line">./make.sh</span><br></pre></td></tr></table></figure><p>   2.3、安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./make.sh install</span><br></pre></td></tr></table></figure><p>   2.4、复制libfastcommon.so文件到usr&#x2F;lib下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/module/fastdfs-master/conf/* /etc/fdfs/</span><br></pre></td></tr></table></figure><h5 id="3-安装FastDFS工程"><a href="#3-安装FastDFS工程" class="headerlink" title="3.安装FastDFS工程"></a>3.安装FastDFS工程</h5><p>  3.1、解压FastDFS工程到目标路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip fastdfs-master.zip -d /opt/module/</span><br></pre></td></tr></table></figure><p>  3.2、进入解压后的FastDFS目录进行编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./make.sh </span><br></pre></td></tr></table></figure><p>  3.3、安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./make.sh install</span><br></pre></td></tr></table></figure><p>  3.4、将FastDFS目录下的conf文件夹里的所有文件拷贝到&#x2F;etc&#x2F;fdfs</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/module/fastdfs-master/conf/* /etc/fdfs/</span><br></pre></td></tr></table></figure><h5 id="4-安装tracker"><a href="#4-安装tracker" class="headerlink" title="4.安装tracker"></a>4.安装tracker</h5><p>  4.1、进入&#x2F;etc&#x2F;fdfs目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/fdfs</span><br></pre></td></tr></table></figure><p>  4.2、修改tracker.conf文件。如果不存在，就拷贝tracker.conf.sample文件为tracker.conf，然后再修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim tracker.conf</span><br><span class="line">需要修改的内容:</span><br><span class="line">1) base_path</span><br><span class="line">原:base_path=/home/yuqing/fastdfs</span><br><span class="line">修改后: base_path=/home/logs/fastdfs （注解：建议放在数据盘）</span><br><span class="line">2) http.server_port</span><br><span class="line">原: http.server_port=8080</span><br><span class="line">修改后: http.server_port=80（注解：修改为自己定的端口）</span><br><span class="line">3) store_group</span><br><span class="line">原: store_group=group2</span><br><span class="line">修改后: store_group=group1</span><br></pre></td></tr></table></figure><p>  4.3、之后，就启动tracker，并查看是启动成功：restart重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdfs_trackerd /etc/fdfs/tracker.conf start</span><br></pre></td></tr></table></figure><p>  4.4、查看tracker是否启动成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -unltp | grep tracker</span><br></pre></td></tr></table></figure><h5 id="5、安装storage"><a href="#5、安装storage" class="headerlink" title="5、安装storage"></a>5、安装storage</h5><p>  5.1、进入&#x2F;etc&#x2F;fdfs目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/fdfs</span><br></pre></td></tr></table></figure><p>  5.2、修改storage.conf文件。如果不存在，就拷贝storage.conf.sample文件为storage.conf，然后再修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim storage.conf</span><br><span class="line">需要修改的内容:</span><br><span class="line">1) base_path</span><br><span class="line">原: base_path=/home/yuqing/fastdfs</span><br><span class="line">修改后: base_path=/home/logs/storage （注解：建议放在数据盘）</span><br><span class="line">2) store_path0</span><br><span class="line">原: store_path0=/home/yuqing/fastdfs</span><br><span class="line">修改后: store_path0=/home/data/storage（注解：建议放在数据盘）</span><br><span class="line">3) tracker_server</span><br><span class="line">原: tracker_server=192.168.209.121:22122</span><br><span class="line">修改后: tracker_server=IP:22122</span><br><span class="line">4) group_name</span><br><span class="line">原: group_name=group1(必须要和tracker的组名相同，由于此处是相同的所以不需要修改)</span><br><span class="line">5) http.server_port</span><br><span class="line">原: http.server_port=8888</span><br><span class="line">修改后: http.server_port=80(注解：和上面的tracker的端口一致)</span><br></pre></td></tr></table></figure><p>  5.3、启动storage，并查看是否启动成功，其它操作则把 start 改为 stop、restart、reload、status 即可。Storage 服务相同。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdfs_storaged /etc/fdfs/storage.conf start</span><br></pre></td></tr></table></figure><p>  5.4、查看是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdfs_monitor /etc/fdfs/storage.conf</span><br></pre></td></tr></table></figure><h5 id="6、查看tracker和storage是不是在通信"><a href="#6、查看tracker和storage是不是在通信" class="headerlink" title="6、查看tracker和storage是不是在通信"></a>6、查看tracker和storage是不是在通信</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdfs_monitor /etc/fdfs/storage.conf</span><br></pre></td></tr></table></figure><h5 id="7、测试图片上传"><a href="#7、测试图片上传" class="headerlink" title="7、测试图片上传"></a>7、<strong>测试图片上传</strong></h5><p>Tracker和storage都已经安装完成，使用命令测试文件上传</p><p>FastDFS提供一个文件上传命令：usr&#x2F;bin&#x2F;fdfs_test 测试文件上传。测试上传需要连接tracker服务器，连接storage服务器。因此需要指定一个配置文件：client.conf配置文件，通过Client.conf连接tracker服务器。修改&#x2F;etc&#x2F;fdfs下client.conf。</p><p> 7.1、修改client.conf</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim client.conf</span><br><span class="line">需要修改的内容:</span><br><span class="line">1) base_path</span><br><span class="line">原: base_path=/home/yuqing/fastdfs</span><br><span class="line">修改后: base_path=/home/logs/client（注解：建议放在数据盘）</span><br><span class="line">2) tracker_server</span><br><span class="line">原: tracker_server=192.168.0.197:22122</span><br><span class="line">修改后: tracker_server=IP:22122</span><br></pre></td></tr></table></figure><p>7.2、测试命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/fdfs_test /etc/fdfs/client.conf upload test.jpg</span><br></pre></td></tr></table></figure><h5 id="8、ngxin安装"><a href="#8、ngxin安装" class="headerlink" title="8、ngxin安装"></a>8、ngxin安装</h5><p> 8.1、nginx环境安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1) yum install gcc-c++</span><br><span class="line"></span><br><span class="line">2) yum install -y pcre pcre-devel</span><br><span class="line"></span><br><span class="line">3) yum install -y zlib zlib-devel</span><br><span class="line"></span><br><span class="line">4) yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><p> 8.2、解压nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf xxxxxx -C ../module/</span><br></pre></td></tr></table></figure><p> 8.3、进入解压后的nginx目录, 依次执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1) ./configure</span><br><span class="line">2) make</span><br><span class="line">3) make install</span><br></pre></td></tr></table></figure><h5 id="9、安装安装fastdfs-nginx-module"><a href="#9、安装安装fastdfs-nginx-module" class="headerlink" title="9、安装安装fastdfs-nginx-module"></a>9、安装<strong>安装fastdfs-nginx-module</strong></h5><p> 9.1、解压安装fastdfs-nginx-module</p><p> 9.2、拷贝usr&#x2F;lib64目录下库文件libfdfsclient.so</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/lib64/libfdfsclient.so /usr/lib </span><br></pre></td></tr></table></figure><p> 9.3、在nginx安装目录下执行如下命令：把module添加nginx中。通过设置安装参数方式添加模块。进入nginx目录，然后执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --add-module=../fastdfs-nginx-module-master/src/</span><br></pre></td></tr></table></figure><p> 9.4、重新编译安装nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install </span><br></pre></td></tr></table></figure><p> 9.5、复制 fastdfs-nginx-module 源码中的配置文件到&#x2F;etc&#x2F;fdfs 目录， 并修改</p><p> 9.6、进入&#x2F;etc&#x2F;fdfs&#x2F;修改mod_fastdfs.conf如下配置，其他默认</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1) connect_timeout=10</span><br><span class="line">2) tracker_serverIP:22122</span><br><span class="line">3) storage_server_port=23000</span><br><span class="line">4) url_have_group_name = true</span><br><span class="line">5) store_path0=/home/data/storage（注解：和上面storage保持一致）</span><br><span class="line">6) base_path=/home/logs/storage（注解：建议放在数据盘）</span><br></pre></td></tr></table></figure><p> 9.7、配置nginx配置文件</p><p>  9.7.1、修改配置，其它的默认，在80端口下添加fastdfs-nginx模块</p><pre><code>                           <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">location ~/group([0-9])/M00 &#123;    </span><br><span class="line">ngx_fastdfs_module; </span><br><span class="line">&#125;</span><br><span class="line">注意nginx.conf中#user  nobody;改成 #user  root;</span><br></pre></td></tr></table></figure></code></pre><p> 9.8、启动nginx, 访问图片路径地址进行测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在地址栏中访问成功 http://IP/group1/M00/00/00/wKgAyV-uOlmAWqXOAAAk48ROrBM024_big.jpg</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;fastDFS安装搭建&quot;&gt;&lt;a href=&quot;#fastDFS安装搭建&quot; class=&quot;headerlink&quot; title=&quot;fastDFS安装搭建&quot;&gt;&lt;/a&gt;fastDFS安装搭建&lt;/h1&gt;&lt;h3 id=&quot;FastDFS环境搭建&quot;&gt;&lt;a href=&quot;#FastDF</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>graylog的安装部署</title>
    <link href="http://example.com/2022/07/29/graylog/"/>
    <id>http://example.com/2022/07/29/graylog/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:22:21.559Z</updated>
    
    <content type="html"><![CDATA[<h1 id="graylog的安装部署"><a href="#graylog的安装部署" class="headerlink" title="graylog的安装部署"></a>graylog的安装部署</h1><p><a href="https://blog.csdn.net/weixin_41004350/article/details/87253316">https://blog.csdn.net/weixin_41004350/article/details/87253316</a></p><p>  日志管理系统，大家普遍知道的都是ELK的解决方案，但是ELK要实现认证和一些状态监控，需要安装x-pack插件包，但是x-pack是要收费的，当然可以选择破解，但是比较麻烦。而且ELK是一个解决方案，在其中包含很多软件，不单elasticsearch,kibana,logstash,还需要redis或kafaka，收集日志还需要不同的beats，整个结构非常复杂，且占用较多资源，要想完全搞懂需要较长时间。</p><p>  但是很多时候，公司系统并不大，使用ELK的成本太高，可以使用一些替代方案，除了ELK还有很多日志管理工具，这里就介绍其中的一个很不错的日志方案：Graylog，Graylog是一个可以跟ELK相提并论的日志管理的后起之秀，一个开源的 log 收容器，背后的储存是搭配 mongodb，而搜寻引擎则由 elasticsearch 提供，自身集成web端，不需要单独部署，目前最新为3.0版本。</p><p>  下面就详细记录一下，graylog3.0的安装与配置和使用。<a href="http://docs.graylog.org/en/3.0/index.html">官方文档入口</a></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><p>安装jdk8，安装方案，详见《<a href="https://blog.csdn.net/weixin_41004350/article/details/78491472">centos7.2 安装 JDK-1.8</a>》</p><p>安装依赖包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br><span class="line">yum install pwgen -y</span><br></pre></td></tr></table></figure><h2 id="二、安装mongodb"><a href="#二、安装mongodb" class="headerlink" title="二、安装mongodb"></a>二、安装mongodb</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">添加源</span><br><span class="line">vim /etc/yum.repos.d/mongodb-org-3.6.repo</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">[mongodb-org-4.0]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">yum install -y mongodb-org</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl <span class="built_in">enable</span> mongod</span></span><br><span class="line">systemctl start mongod</span><br></pre></td></tr></table></figure><h2 id="三、安装elasticsearch"><a href="#三、安装elasticsearch" class="headerlink" title="三、安装elasticsearch"></a>三、安装elasticsearch</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">graylog3.0 使用的elasticsearch不低于5.6.13版本，我这里用的最新版6.x</span></span><br><span class="line">vim /etc/yum.repos.d/elasticsearch.repo</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">[elasticsearch-6.x]</span><br><span class="line">name=Elasticsearch repository for 6.x packages</span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/6.x/yum</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line">type=rpm-md</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">yum install elasticsearch</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置，设置JAVA_HOME</span></span><br><span class="line">vim /etc/sysconfig/elasticsearch</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">JAVA_HOME=/usr/local/jdk1.8.0_191   # 填上自己的java_home路径  默认的为/usr/bin/java</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动</span></span><br><span class="line">systemctl enable elasticsearch</span><br><span class="line">systemctl start elasticsearch</span><br></pre></td></tr></table></figure><h2 id="四、安装Groylog"><a href="#四、安装Groylog" class="headerlink" title="四、安装Groylog"></a>四、安装Groylog</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://packages.graylog2.org/repo/packages/graylog-3.0-repository_latest.rpm</span><br><span class="line">yum install graylog-server -y</span><br></pre></td></tr></table></figure><p>修改配置， password_secret和root_password_sha2是必须的，不设置则无法启动，设置方法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置</span></span><br><span class="line">vim /etc/graylog/server/server.conf</span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">passworde_secret可以通过命令：pwgen -N 1 -s 96 来随机生成，下面就是我随机生成的</span></span><br><span class="line">password_secret = 6Z06fZHU2DwuOf9X8fhnvphCd3OM7oqwLECRRcejvjpieSvVtwu08yHYHIKDi56bAxRvtCOZ3xKKiBqyt00XYCgVa0oETB0L</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">admin用户密码生成命令：<span class="built_in">echo</span> -n yourpassword | <span class="built_in">sha256sum</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成后，请记住你的 YourPassword</span></span><br><span class="line">root_password_sha2 = e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">admin用户邮箱</span></span><br><span class="line">root_email = &quot;root@example.com&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">时区</span></span><br><span class="line">root_timezone = Asia/Shanghai</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">elasticsearch 相关配置</span></span><br><span class="line">elasticsearch_hosts = http://127.0.0.1:9200</span><br><span class="line">elasticsearch_shards =1 </span><br><span class="line">elasticsearch_replicas = 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mongodb 连接配置，这里直接本机起的mongodb，没有设置验证</span></span><br><span class="line">mongodb_uri = mongodb://localhost/graylog</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">电子邮件smtp,设置为自己的邮箱smtp服务</span></span><br><span class="line">transport_email_enabled = true</span><br><span class="line">transport_email_hostname = smtp.exmail.qq.com</span><br><span class="line">transport_email_port = 465</span><br><span class="line">transport_email_use_auth = true</span><br><span class="line">transport_email_use_tls = false</span><br><span class="line">transport_email_use_ssl = true</span><br><span class="line">transport_email_auth_username = root@example.com</span><br><span class="line">transport_email_auth_password = 123456</span><br><span class="line">transport_email_subject_prefix = [graylog]</span><br><span class="line">transport_email_from_email = root@example.com</span><br><span class="line">transport_email_web_interface_url = http://graylog.example.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">网络访问相关，重要，graylog3比2.x版本简洁了很多网络配置，只需配置http_bind_address即可。</span></span><br><span class="line">http_bind_address = 0.0.0.0:9000</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置外网地址，我这里用了域名+nginx做反向代理，所以外网地址如下。没有的话就直接就用外网ip+port，如：http://外网ip:9000/</span></span><br><span class="line">http_publish_uri = http://graylog.example.com/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">http_external_uri = http://graylog.example.com/ 单节点的话，此配置不需要配置，默认使用http_publish_uri</span></span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动需要手动设置Java路径</span></span><br><span class="line">vim /etc/sysconfig/graylog-server</span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line">JAVA=/usr/local/jdk1.8.0_191/bin/java</span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl enable graylog-server</span><br><span class="line">systemctl start graylog-server</span><br></pre></td></tr></table></figure><h2 id="五、访问web页面"><a href="#五、访问web页面" class="headerlink" title="五、访问web页面"></a>五、访问web页面</h2><p> 按照上面配置，直接配置成外网ip地址，那么直接访问 http:&#x2F;&#x2F;外网ip:9000，就可以进入web登陆页面</p><p>输入用户密码登陆</p><h2 id="六、安装Graylog-Sidecar（Graylog-Collector-Sidecar）"><a href="#六、安装Graylog-Sidecar（Graylog-Collector-Sidecar）" class="headerlink" title="六、安装Graylog Sidecar（Graylog Collector Sidecar）"></a>六、安装Graylog Sidecar（Graylog Collector Sidecar）</h2><p>  Graylog Sidecar是一个轻量级配置管理系统，适用于不同的日志收集器，也称为后端。Graylog节点充当包含日志收集器配置的集中式集线器。在支持的消息生成设备&#x2F;主机上，Sidecar可以作为服务（Windows主机）或守护程序（Linux主机）运行。进行在不同机器上进行日志的采集并发送到graylog server</p><p>  在graylog3.0版本以前，称为Graylog Collector Sidecar，在3.0中改为了Graylog Sidecar，在官方文档中有详细安装指导：<a href="http://docs.graylog.org/en/3.0/pages/sidecar.html">官方文档入口</a>。这里也参考进行安装。版本对照表如下，首先去github上下载相应的rpm安装包。<a href="https://github.com/Graylog2/collector-sidecar/releases">官方GITHUB下载地址</a></p><table><thead><tr><th><strong>Sidecar version</strong></th><th>Graylog server version</th></tr></thead><tbody><tr><td>1.0.x</td><td>3.0.x</td></tr><tr><td>0.1.x</td><td>2.2.x,2.3.x,2.4.x,2.5.x,3.0.x</td></tr><tr><td>0.0.9</td><td>2.1.x</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装</span></span><br><span class="line">rpm -i graylog-sidecar-1.0.0-1.x86_64.rpm</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置</span></span><br><span class="line">vim /etc/graylog/sidecar/sidecar.yml</span><br><span class="line">----------------------------------------------------------------------------</span><br><span class="line">server_url: &quot;hhttp://graylog.example.com/api/&quot;    # api的外网地址</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">api token 必要的，不然启动不了，token需要在web界面上进行手动创建</span></span><br><span class="line">server_api_token: &quot;1jq26cssvc6rj4qac4bt9oeeh0p4vt5u5kal9jocl1g9mdi4og3n&quot;</span><br><span class="line">node_name: &quot;graylog-server-localhost&quot;    # 自定义节点名称</span><br><span class="line">update_interval: 10</span><br><span class="line">send_status: true</span><br><span class="line">----------------------------------------------------------------------------</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装系统服务</span></span><br><span class="line">graylog-sidecar -service install</span><br><span class="line">systemctl start graylog-sidecar</span><br></pre></td></tr></table></figure><p>手动创建server_api_token。如图：</p><p>ok，到此就可以启动graylog-sidecar了。启动后，在web界面上就可以看到一个节点了，然后下面记录怎么手动配置这个节点的日志采集。首先需要创建一个beats的input，因为我要要用filebeat进行日志采集。</p><p>然后就需要定义sidecar的filebeat配置，用这个配置来启动filebeat进行日志采集，并输入到上面定义的beats input。但是graylog3.0中，graylog sidecar的linux版本不包含filebeat(3.0版本之前是默认包含filebeat的)，需要自己手动下载安装filebeat，安装非常简单，通过官方下载页面，直接下载rpm包进行安装就行： <a href="https://www.elastic.co/downloads/beats/filebeat">官方下载地址</a></p><p>PS：我这里是演示的用filebeat进行日志采集，如果用nxlog进行采集，同样的需要安装nxlog程序。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装，目前最新版6.6.0</span></span><br><span class="line">rpm -i filebeat-6.6.0-x86_64.rpm</span><br></pre></td></tr></table></figure><p>ok，就这样就ok啦，然后下面在web界面上进行配置</p><p>这里我以采集本机上graylog-server的日志为例子，自定义变量中定义beats input服务的ip和端口，使得sidecar采集器能将数据输入指定input，并可以在所有配置中直接复用。</p><p>配置创建完成后，需要将配置与指定sidecar进行联系，然后sidecar就能以执行配置启动filebeat进行日志采集。如图：</p><p>然后就能在web界面上，看到采集到的graylog-server的日志</p><p>用centos自带的日志系统</p><p>公司很多的虚拟机都是centos7的操作系统，带有rsyslog服务，可以使用syslog协议将系统日志发送到graylog上进行收集，可以指定端口。**<br>**</p><p> 必须注意的是， 很多linux发行版的非root用户是无法使用1024以下的端口的，这些被称为特权端口。本次使用udp1515端口收集。</p><p>使用rsyslog转发syslog消息很容易。充分利用日志的唯一重要事项是遵循 RFC 5424。按照如下示例配置您的rsyslog守护程序将RFC 5424日期发送到Graylog syslog输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/rsyslog.d/greylog.conf                  #创建rsyslog额外配置文件</span><br><span class="line">cat &lt;&lt; EOF &gt; /etc/rsyslog.d/greylog.conf             #编辑配置文件</span><br><span class="line">*.* @192.168.99.40:1515;RSYSLOG_SyslogProtocol23Format       #*.* 代表linux中所有模块所有级别的日志，@代表使用udp协议，@@代表使用tcp协议，192.168.99.40:1515greylog主机的IP和收集端口</span><br><span class="line">EOF                                 #RSYSLOG_SyslogProtocol23Format 代表syslog协议格式模板</span><br></pre></td></tr></table></figure><p>配置完成后，重启rsyslog服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rsyslog</span><br><span class="line">systemctl enable rsyslog</span><br></pre></td></tr></table></figure><p>防火墙加日志在防火墙的配置上写日志服务器ip和端口</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;graylog的安装部署&quot;&gt;&lt;a href=&quot;#graylog的安装部署&quot; class=&quot;headerlink&quot; title=&quot;graylog的安装部署&quot;&gt;&lt;/a&gt;graylog的安装部署&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ELKF日志管理平台搭建</title>
    <link href="http://example.com/2022/07/29/ELKF/"/>
    <id>http://example.com/2022/07/29/ELKF/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:06:01.059Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ELKF日志管理平台搭建"><a href="#ELKF日志管理平台搭建" class="headerlink" title="ELKF日志管理平台搭建"></a>ELKF日志管理平台搭建</h2><h3 id="一、安装Filebeat"><a href="#一、安装Filebeat" class="headerlink" title="一、安装Filebeat"></a>一、安装Filebeat</h3><p>1.下载<a href="https://www.elastic.co/cn/downloads/beats/filebeat#ga-release">Filebeat</a>并上传至服务器&#x2F;home&#x2F;software目录</p><p>2.解压并重命名文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# cd /home/software/</span><br><span class="line">[root@localhost software]# tar -xvf filebeat-7.4.0-linux-x86_64.tar.gz</span><br><span class="line">[root@localhost software]# mv filebeat-7.4.0-linux-x86_64 filebeat</span><br></pre></td></tr></table></figure><p>3.修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost software]# vim filebeat/filebeat.yml</span><br><span class="line">filebeat.inputs:</span><br><span class="line">- type: log</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">更改为<span class="literal">true</span>以启用此输入配置</span></span><br><span class="line">  enabled: true</span><br><span class="line">  paths:</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">修改系统日志所在位置</span></span><br><span class="line">    - /var/log/nginx/*.log</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">to add additional information to the crawled <span class="built_in">log</span> files <span class="keyword">for</span> filtering</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">配置索引名</span></span><br><span class="line">  fields:</span><br><span class="line">     machine: master</span><br><span class="line">     #应用名称</span><br><span class="line">     app: job-center</span><br><span class="line">  multiline.pattern: ^\[</span><br><span class="line">  multiline.negate: true</span><br><span class="line">  multiline.match: after</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">此处filebeat.inputs可以配置多个</span> </span><br><span class="line"></span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: $&#123;path.config&#125;/modules.d/*.yml</span><br><span class="line">  reload.enabled: false</span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 1</span><br><span class="line">setup.kibana:</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-------------------------- Elasticsearch output ------------------------------</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">output.elasticsearch:</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Array of hosts to connect to.</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">hosts: [<span class="string">&quot;localhost:9200&quot;</span>]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Optional protocol and basic auth credentials.</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">protocol: <span class="string">&quot;https&quot;</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">username: <span class="string">&quot;elastic&quot;</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">password: <span class="string">&quot;changeme&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">----------------------------- Logstash output --------------------------------</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注释掉ElasticSearch output中内内容让它不直接输出到ElasticSearch</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改Logstash output中的output.logstash.hosts为你的Logstash所在机器</span></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [&quot;localhost:5044&quot;]</span><br><span class="line">processors:</span><br><span class="line">  - add_host_metadata: ~</span><br><span class="line">  - add_cloud_metadata: ~</span><br></pre></td></tr></table></figure><p>4.启动&#x2F;停止应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost filebeat]# nohup ./filebeat -e -c filebeat.yml &amp;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看应用进程</span></span><br><span class="line">[root@localhost filebeat]# ps -aux|grep filebeat</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">杀死进程</span></span><br><span class="line">[root@localhost filebeat]# kill -9 进程号</span><br></pre></td></tr></table></figure><h3 id="二、安装logstash"><a href="#二、安装logstash" class="headerlink" title="二、安装logstash"></a>二、安装logstash</h3><p>1.下载<a href="https://www.elastic.co/cn/downloads/logstash">Logstash</a>并上传至服务器<code>/home/software</code>目录</p><p>2.解压并重命名文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# cd /home/software/</span><br><span class="line">[root@localhost software]# tar -xvf logstash-7.4.0.tar.gz</span><br><span class="line">[root@localhost software]# mv logstash-7.4.0 logstash</span><br></pre></td></tr></table></figure><p>3.修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost software]# vim logstash/config/logstash-sample.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Sample Logstash configuration <span class="keyword">for</span> creating a simple</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Beats -&gt; Logstash -&gt; Elasticsearch pipeline.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">beats.port配置接收Filebeat的数据的端口</span></span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5044</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">output.elasticsearch配置在ElasticSearch中生成索引名的规则</span></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [&quot;http://localhost:9200&quot;]</span><br><span class="line">    #在ElasticSearch中生成索引名的规则[logstash-job-center-2019.10.16]</span><br><span class="line">    #这里通过生成不同的索引名来区分不同模块的日志文件</span><br><span class="line">    #Filebeat中配置fields.app</span><br><span class="line">    index =&gt; &quot;logstash-%&#123;[fields][app]&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">    #user =&gt; &quot;elastic&quot;</span><br><span class="line">    #password =&gt; &quot;changeme&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 filebeat.inputs 是可以定义多个的，每个 filebeat.inputs 对应一个微服务模块日志配置，我们可以在fields下面自定义一些属性，然后在logstash的配置文件中获取到这个自定义属性，通过判断自定义属性来对每个模块做个性化索引配置。</p><p>4.启动&#x2F;停止应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost logstash]# nohup ./bin/logstash -f ./config/logstash-sample.conf &amp;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看应用进程</span></span><br><span class="line">[root@localhost logstash]# ps -aux|grep logstash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">杀死进程</span></span><br><span class="line">[root@localhost logstash]# kill -9 进程号</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.错误处理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Thread.exclusive is deprecated, use Thread::Mutex</span><br></pre></td></tr></table></figure><p>解决：在 logstash.yml 文件中找到 Data path 的路径(默认在安装目录的data目录下）</p><p>查看是否存在 .lock 文件，如果存在把它删除</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ELK1 data]# ls -alh</span><br><span class="line">总用量 20K</span><br><span class="line">drwxr-sr-x  4 tingshuo staff 4.0K 8月 19 11:42 .</span><br><span class="line">drwxr-sr-x 14 tingshuo staff 4.0K 8月 19 11:42 ..</span><br><span class="line">drwxr-sr-x  2 tingshuo staff 4.0K 8月 19 11:42 dead_letter_queue</span><br><span class="line">-rw-r--r--  1 tingshuo staff    0 8月 19 11:42 .lock</span><br><span class="line">drwxr-sr-x  2 tingshuo staff 4.0K 8月 19 11:42 queue</span><br><span class="line">-rw-r--r--  1 tingshuo staff   36 8月 19 11:42 uuid</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除带lock的文件</span></span><br><span class="line">[root@ELK1 data]# rm .lock</span><br></pre></td></tr></table></figure><h3 id="三、安装ElasticSearch"><a href="#三、安装ElasticSearch" class="headerlink" title="三、安装ElasticSearch"></a>三、安装ElasticSearch</h3><p>1.下载<a href="https://www.elastic.co/cn/downloads/elasticsearch">ElasticSearch</a>并上传至服务器<code>/home/software</code>目录</p><p> 2.解压并重命名文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# cd /home/software/</span><br><span class="line">[root@localhost software]# tar -xvf elasticsearch-7.4.0-linux-x86_64.tar.gz</span><br><span class="line">[root@localhost software]# mv elasticsearch-7.4.0-linux-x86_64 elasticsearch</span><br></pre></td></tr></table></figure><p>3.修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[elk@localhost elasticsearch]$ vim config/elasticsearch.yml</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果配置集群，不同ElasticSearch节点的node.name和http.port需要保持唯一</span></span><br><span class="line">cluster.name: my-app-1</span><br><span class="line">node.name: node-1</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">取消注释保留一个节点</span></span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br></pre></td></tr></table></figure><p>4.非root用户启动设置</p><p>我们需要创建一个elk用户和组，因为ElasticSearch不能以root身份运行，否则将会报错，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加elk用户组</span></span><br><span class="line">[root@localhost elasticsearch]# groupadd elk</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">为用户组添加elk用户</span></span><br><span class="line">[root@localhost elasticsearch]# useradd -g elk elk</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">赋予权限</span></span><br><span class="line">[root@localhost elasticsearch]# chown -R elk:elk /usr/local/elasticsearch</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动es</span></span><br><span class="line">[elk@localhost elasticsearch]$ /home/software/elasticsearch/bin/elasticsearch -d</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">验证启动成功否、看到进程号就说明启动成功了</span></span><br><span class="line">[elk@localhost elasticsearch]$ ps -aux|grep elasticsearch</span><br></pre></td></tr></table></figure><p>5.启动&#x2F;停止应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-d后台启动</span></span><br><span class="line">[root@localhost elasticsearch]# /home/software/elasticsearch/bin/elasticsearch -d</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看应用进程</span></span><br><span class="line">[root@localhost elasticsearch]# ps -aux|grep elasticsearch</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">杀死进程</span></span><br><span class="line">[root@localhost elasticsearch]# kill -9 进程号</span><br></pre></td></tr></table></figure><p>6.启动报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[elk@localhost elasticsearch]$ ERROR: [3] bootstrap checks failed</span><br><span class="line">[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65535]</span><br><span class="line">[2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br><span class="line">[3]: the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured</span><br></pre></td></tr></table></figure><ul><li>解决错误[1、2] 以root身份执行下面的脚本，执行后要重新登录普通账户启动ES</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo &quot;* soft nofile 65536&quot;&gt;&gt;/etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">echo &quot;* hard nofile 65536&quot;&gt;&gt;/etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">echo &quot;* soft memlock unlimited&quot;&gt;&gt;/etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">echo &quot;* hard memlock unlimited&quot;&gt;&gt;/etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">echo &quot;vm.max_map_count = 262144&quot;&gt;&gt;/etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">ulimit -l unlimited</span><br></pre></td></tr></table></figure><ul><li>解决错误[3]</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">取消注释保留一个节点</span></span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br></pre></td></tr></table></figure><p>7.验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[elk@localhost elasticsearch]$ curl http://localhost:9200/</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;node-1&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;my-app-1&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;7i63wZl1SPCbsuQCJjrK5g&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;7.4.0&quot;,</span><br><span class="line">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class="line">    &quot;build_type&quot; : &quot;tar&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;22e1767283e61a198cb4db791ea66e3f11ab9910&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2019-09-27T08:36:48.569419Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;8.2.0&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、安装Kibana"><a href="#四、安装Kibana" class="headerlink" title="四、安装Kibana"></a>四、安装Kibana</h3><p> 1.下载<a href="https://www.elastic.co/cn/downloads/kibana">Kibana</a>并上传至服务器<code>/home/software</code>目录</p><p>2.解压并重命名文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# cd /home/software/</span><br><span class="line">[root@localhost software]# tar -xvf kibana-7.4.0-linux-x86_64.tar.gz</span><br><span class="line">[root@localhost software]# mv kibana-7.4.0-linux-x86_64 kibana</span><br></pre></td></tr></table></figure><p>3.修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server.port: 5601</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这里需要需改为实际IP，否则外部浏览器无法访问</span></span><br><span class="line">server.host: &quot;192.xxx.xxx.xxx&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">汉化</span></span><br><span class="line">i18n.locale: &quot;zh-CN&quot;</span><br></pre></td></tr></table></figure><p>4.启动&#x2F;停止应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">后台启动</span></span><br><span class="line">[elk@localhost kibana]$ nohup ./bin/kibana --allow-root &amp;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看应用进程</span></span><br><span class="line">[root@localhost kibana]# ps -aux|grep kibana</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">杀死进程</span></span><br><span class="line">[root@localhost kibana]# kill -9 进程号</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以上查不到进程则使用如下命令</span></span><br><span class="line">[root@localhost config]# netstat -tunlp|grep 5601</span><br></pre></td></tr></table></figure><p>5.Kibana设置</p><ul><li>访问浏览器：http:&#x2F;&#x2F;本机ip:5601</li></ul><ul><li><p>管理–&gt;索引模式–&gt;创建索引模式</p></li><li><p>在Discover查看我们刚刚建立的索引规则匹配到的索引数据，如图所示</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ELKF日志管理平台搭建&quot;&gt;&lt;a href=&quot;#ELKF日志管理平台搭建&quot; class=&quot;headerlink&quot; title=&quot;ELKF日志管理平台搭建&quot;&gt;&lt;/a&gt;ELKF日志管理平台搭建&lt;/h2&gt;&lt;h3 id=&quot;一、安装Filebeat&quot;&gt;&lt;a href=&quot;#一</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mysql通过nginx进行映射</title>
    <link href="http://example.com/2022/07/29/mysqlnginx/"/>
    <id>http://example.com/2022/07/29/mysqlnginx/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:08:29.097Z</updated>
    
    <content type="html"><![CDATA[<h4 id="mysql通过nginx进行映射"><a href="#mysql通过nginx进行映射" class="headerlink" title="mysql通过nginx进行映射"></a>mysql通过nginx进行映射</h4><p>背景：现在nginx1.9以上版本才支持，安装请见nginx平滑升级</p><p>注意编译的时候加上–with-stream </p><p>配置文件配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/local/nginx/stream/mysql.cnf</span><br><span class="line">stream &#123;</span><br><span class="line"></span><br><span class="line">    upstream mysql &#123;</span><br><span class="line">        server 数据库IP:3306(数据库端口) weight=1 max_fails=3 fail_timeout=30s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 3007（映射端口）;</span><br><span class="line">        proxy_connect_timeout 10s;</span><br><span class="line">        proxy_timeout 30s;</span><br><span class="line">        proxy_pass mysql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>nginx重载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;mysql通过nginx进行映射&quot;&gt;&lt;a href=&quot;#mysql通过nginx进行映射&quot; class=&quot;headerlink&quot; title=&quot;mysql通过nginx进行映射&quot;&gt;&lt;/a&gt;mysql通过nginx进行映射&lt;/h4&gt;&lt;p&gt;背景：现在nginx1.9以</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nginx平滑升级</title>
    <link href="http://example.com/2022/07/29/nginx/"/>
    <id>http://example.com/2022/07/29/nginx/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:09:37.632Z</updated>
    
    <content type="html"><![CDATA[<h4 id="nginx平滑升级"><a href="#nginx平滑升级" class="headerlink" title="nginx平滑升级"></a>nginx平滑升级</h4><h5 id="1-把nginx高版本的压缩包拷到服务器上，解压到-x2F-usr-x2F-local-x2F-目录下"><a href="#1-把nginx高版本的压缩包拷到服务器上，解压到-x2F-usr-x2F-local-x2F-目录下" class="headerlink" title="1.把nginx高版本的压缩包拷到服务器上，解压到&#x2F;usr&#x2F;local&#x2F;目录下"></a>1.<strong>把nginx高版本的压缩包拷到服务器上，解压到&#x2F;usr&#x2F;local&#x2F;目录下</strong></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-*.**.*.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure><h5 id="2-进行configure配置并编译"><a href="#2-进行configure配置并编译" class="headerlink" title="2.进行configure配置并编译"></a>2.<strong>进行configure配置并编译</strong></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure  --prefix=/usr/local/nginx/ --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module  --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-threads  --with-stream  --with-stream_ssl_module --with-http_slice_module --with-file-aio --with-http_v2_module</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h5 id="3-把之前的nginx文件备份"><a href="#3-把之前的nginx文件备份" class="headerlink" title="3.把之前的nginx文件备份"></a>3.<strong>把之前的nginx文件备份</strong></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/local/nginx/sbin/nginx nginx.old</span><br></pre></td></tr></table></figure><h5 id="4-然后返回nginx-1-14-2下的objs目录，把新的nginx拷贝过来"><a href="#4-然后返回nginx-1-14-2下的objs目录，把新的nginx拷贝过来" class="headerlink" title="4.然后返回nginx-1.14.2下的objs目录，把新的nginx拷贝过来"></a>4.然后返回nginx-1.14.2下的objs目录，把新的nginx拷贝过来</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/local/nginx-*.**.*/objs/nginx /usr/local/nginx/sbin/</span><br></pre></td></tr></table></figure><p><strong>5.到&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin下查看nginx版本，检出配置文件，启动nginx</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -v   (检查版本)</span><br><span class="line">/usr/local/nginx/sbin/nginx -t  （检查配置文件）</span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload （重载）</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;nginx平滑升级&quot;&gt;&lt;a href=&quot;#nginx平滑升级&quot; class=&quot;headerlink&quot; title=&quot;nginx平滑升级&quot;&gt;&lt;/a&gt;nginx平滑升级&lt;/h4&gt;&lt;h5 id=&quot;1-把nginx高版本的压缩包拷到服务器上，解压到-x2F-usr-x2F</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>centos7 下安装redis4.0集群</title>
    <link href="http://example.com/2022/07/29/redis/"/>
    <id>http://example.com/2022/07/29/redis/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:10:34.901Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7-下安装redis4-0集群"><a href="#centos7-下安装redis4-0集群" class="headerlink" title="centos7 下安装redis4.0集群"></a>centos7 下安装redis4.0集群</h1><h5 id="1、环境"><a href="#1、环境" class="headerlink" title="1、环境"></a>1、环境</h5><p>· CentOS版本：CentOS 7</p><p>· 三台主机(IP)：192.168.1.2、192.168.1.3、192.168.1.4</p><p>· Redis版本：4.0.8</p><h5 id="2、注意事项"><a href="#2、注意事项" class="headerlink" title="2、注意事项"></a>2、注意事项</h5><p> 2.1、安裝 GCC 编译工具 不然会有编译不过的问题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc g++ gcc-c++ make</span><br></pre></td></tr></table></figure><p> 2.2、升级所有的包，防止出现版本过久不兼容问题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><h2 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h2><h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h3><h5 id="下载，解压，编译安装"><a href="#下载，解压，编译安装" class="headerlink" title="下载，解压，编译安装"></a>下载，解压，编译安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget http://download.redis.io/releases/redis-*.*.*.tar.gz</span><br><span class="line">ar xzf redis-*.*.*.tar.gz</span><br><span class="line">cd redis-*.*.*.</span><br><span class="line">make</span><br><span class="line">如果因为上次编译失败，有残留的文件</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make distclean</span></span><br></pre></td></tr></table></figure><h5 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h5><p>1.首先在 第一台机器上 &#x2F;opt&#x2F;redis- <em>.</em>.*.目录下创建 redis-cluster 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/redis-*/redis-cluster</span><br></pre></td></tr></table></figure><p>2.在 redis-cluster 目录下，创建名为7000、7001、7002的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/redis-*/redis-cluster\</span><br><span class="line">mkdir 7000 7001 7002</span><br></pre></td></tr></table></figure><p>3.分别修改这三个配置文件，把如下redis.conf 配置内容粘贴进去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi 7000/redis.conf</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi 7001/redis.conf</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi 7002/redis.conf</span></span><br><span class="line">redis.conf 配置</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">端口7000,7001,7002</span></span><br><span class="line">port 7000</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">默认ip为127.0.0.1，需要改为其他节点机器可访问的ip，否则创建集群时无法访问对应的端口，无法创建集群</span></span><br><span class="line">bind 本机IP</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">redis后台运行</span></span><br><span class="line">daemonize yes </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">pidfile文件对应7000，7001，7002</span></span><br><span class="line">pidfile /var/run/redis_7000.pid</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开启集群，把注释<span class="comment">#去掉</span></span></span><br><span class="line">cluster-enabled yes</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">集群的配置，配置文件首次启动自动生成 7000，7001，7002</span>     </span><br><span class="line">cluster-config-file nodes_7000.conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">请求超时，默认15秒，可自行设置</span></span><br><span class="line">luster-node-timeout 10100</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">aof日志开启，有需要就开启，它会每次写操作都记录一条日志</span></span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><p>接着在另外两台机器上(10.91.250.147，10.91.250.148)重复以上三步，只是把目录改为7003、7004、7005、7006、7007、7008对应的配置文件也按照这个规则修改即可</p><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><p>#第一台机器上执行 3个节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span>((i=0;i&lt;=2;i++)); <span class="keyword">do</span> /opt/redis-*/src/redis-server /opt/redis-*/redis-cluster/700<span class="variable">$i</span>/redis.conf; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure><p>#第二台机器上执行 3个节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span>((i=3;i&lt;=5;i++)); <span class="keyword">do</span> /opt/redis*/src/redis-server /opt/redis-*/redis-cluster/700<span class="variable">$i</span>/redis.conf; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure><p>#第三台机器上执行 3个节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span>((i=6;i&lt;=8;i++)); <span class="keyword">do</span> /opt/redi*/src/redis-server /opt/redis-*/redis-cluster/700<span class="variable">$i</span>/redis.conf; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure><h3 id="检查服务"><a href="#检查服务" class="headerlink" title="检查服务"></a>检查服务</h3><p>检查各 Redis 各个节点启动情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep redis           //redis是否启动成功</span><br><span class="line">netstat -tnlp | grep redis    //监听redis端口</span><br></pre></td></tr></table></figure><h3 id="安装Ruby"><a href="#安装Ruby" class="headerlink" title="安装Ruby"></a>安装Ruby</h3><p>redis-trib.rb 这个工具构建redis集群的时候，redis requires Ruby version &gt;&#x3D; 2.2.2</p><p>(无外网的话要进行ruby的下载解压进行cp)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.5.tar.gz</span><br><span class="line">tar zxvf  ruby-2.3.5.tar.gz</span><br><span class="line">cd ruby-2.3.5</span><br><span class="line">./configure  --prefix=/opt/ruby</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">ln -s /opt/ruby/bin/ruby /usr/bin/ruby</span><br><span class="line">ln -s /opt/ruby/bin/gem /usr/bin/gem</span><br><span class="line">ruby -v　</span><br></pre></td></tr></table></figure><h5 id="安装rubygem-redis依赖"><a href="#安装rubygem-redis依赖" class="headerlink" title="安装rubygem redis依赖"></a>安装rubygem redis依赖</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://rubygems.org/downloads/redis-3.3.0.gem</span><br><span class="line">gem install -l redis-3.3.0.gem</span><br></pre></td></tr></table></figure><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>注意：在任意一台上运行，不要在每台机器上都运行，一台就够了，</p><p>Redis 官方提供了 redis-trib.rb 这个工具，就在解压目录的 src 目录中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> /redis/redis-*/src/redis-trib.rb create --replicas 1 IP</span><br><span class="line">1:7000 IP1:7001 IP1:7002 IP2:7003 IP2:7004 IP2:7005 IP3:7006 IP3:7007 IP3:7008</span><br></pre></td></tr></table></figure><p>出现以下内容</p><p>[root@localhost redis-cluster]# &#x2F;opt&#x2F;redis&#x2F;redis-*&#x2F;src&#x2F;redis-trib.rb create –replicas 1 IP<br>1:7000 IP1:7001 IP1:7002 IP2:7003 IP2:7004 IP2:7005 IP3:7006 IP3:7007 IP3:7008</p><p>&gt;&gt;&gt; Creating cluster</p><p>&gt;&gt;&gt; Performing hash slots allocation on 9 nodes…</p><p>Using 4 masters:10.91.250.146:700010.91.250.147:700310.91.250.148:700610.91.250.146:7001</p><p>Adding replica 10.91.250.147:7004 to 10.91.250.146:7000</p><p>Adding replica 10.91.250.148:7007 to 10.91.250.147:7003</p><p>Adding replica 10.91.250.146:7002 to 10.91.250.148:7006</p><p>Adding replica 10.91.250.147:7005 to 10.91.250.146:7001</p><p>Adding replica 10.91.250.148:7008 to 10.91.250.146:7000M: 7c622ac191edd40dd61d9b79b27f6f69d02a5bbf 10.91.250.146:7000  slots:0-4095 (4096 slots) masterM: 44c81c15b01d992cb9ede4ad35477ec853d70723 10.91.250.146:7001  slots:12288-16383 (4096 slots) masterS: 38f03c27af39723e1828eb62d1775c4b6e2c3638 10.91.250.146:7002</p><p>  replicates f1abb62a8c9b448ea14db421bdfe3f1d8075189cM: 987965baf505a9aa43e50e46c76189c51a8f17ec 10.91.250.147:7003  slots:4096-8191 (4096 slots) masterS: 6555292fed9c5d52fcf5b983c441aff6f96923d5 10.91.250.147:7004</p><p>  replicates 7c622ac191edd40dd61d9b79b27f6f69d02a5bbfS: 2b5ba254a0405d4efde4c459867b15176f79244a 10.91.250.147:7005</p><p>  replicates 44c81c15b01d992cb9ede4ad35477ec853d70723M: f1abb62a8c9b448ea14db421bdfe3f1d8075189c 10.91.250.148:7006  slots:8192-12287 (4096 slots) masterS: eb4067373d36d8a8df07951f92794e67a6aac022 10.91.250.148:7007</p><p>  replicates 987965baf505a9aa43e50e46c76189c51a8f17ecS: 2919e041dd3d1daf176d6800dcd262f4e727f366 10.91.250.148:7008</p><p>  replicates 7c622ac191edd40dd61d9b79b27f6f69d02a5bbf</p><h4 id="Can-I-set-the-above-configuration-type-‘yes’-to-accept-yes"><a href="#Can-I-set-the-above-configuration-type-‘yes’-to-accept-yes" class="headerlink" title="Can I set the above configuration? (type ‘yes’ to accept): yes"></a>Can I set the above configuration? (type ‘yes’ to accept): yes</h4><h4 id="输入yes"><a href="#输入yes" class="headerlink" title="输入yes"></a>输入yes</h4><p>看到这个就表示集群创建成功</p><p>Check for open slots</p><p>&gt;&gt;&gt;Check slots coverage…[OK]  All 16384  slots   covered</p><h3 id="关闭集群"><a href="#关闭集群" class="headerlink" title="关闭集群"></a>关闭集群</h3><p>这样也可以，推荐</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkill redis</span><br></pre></td></tr></table></figure><p>循环节点逐个关闭</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span>((i=0;i&lt;=2;i++)); <span class="keyword">do</span> /opt/redis-4.0.8/src/redis-cli -c -h 10.91.250.146 -p 700<span class="variable">$i</span> shutdown; <span class="keyword">done</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span>((i=3;i&lt;=5;i++)); <span class="keyword">do</span> /opt/redis-4.0.8/src/redis-cli -c -h 10.91.250.147 -p 700<span class="variable">$i</span> shutdown; <span class="keyword">done</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="keyword">for</span>((i=6;i&lt;=8;i++)); <span class="keyword">do</span> /opt/redis-4.0.8/src/redis-cli -c -h 10.91.250.148 -p 700<span class="variable">$i</span> shutdown; <span class="keyword">done</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="集群验证"><a href="#集群验证" class="headerlink" title="集群验证"></a>集群验证</h3><h4 id="连接集群测试"><a href="#连接集群测试" class="headerlink" title="连接集群测试"></a>连接集群测试</h4><p>参数 -C 可连接到集群，因为 redis.conf 将 bind 改为了ip地址，所以 -h 参数不可以省略，-p 参数为端口号</p><p>我们在10.91.250.146机器redis 7000 的节点set 一个key</p><p>&#x2F;opt&#x2F;redis-4.0.8&#x2F;src&#x2F;redis-cli -h IP -c -p 7000</p><p>IP:7000&gt; cluster nodes</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;centos7-下安装redis4-0集群&quot;&gt;&lt;a href=&quot;#centos7-下安装redis4-0集群&quot; class=&quot;headerlink&quot; title=&quot;centos7 下安装redis4.0集群&quot;&gt;&lt;/a&gt;centos7 下安装redis4.0集群&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sqlserver命令汇总</title>
    <link href="http://example.com/2022/07/29/sqlserver/"/>
    <id>http://example.com/2022/07/29/sqlserver/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:11:26.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sqlserver命令汇总"><a href="#sqlserver命令汇总" class="headerlink" title="sqlserver命令汇总"></a>sqlserver命令汇总</h1><p>1.单用户变为多用户</p>   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE master;</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@SQL</span> <span class="type">VARCHAR</span>(MAX);</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@SQL</span><span class="operator">=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@SQL</span><span class="operator">=</span><span class="variable">@SQL</span><span class="operator">+</span><span class="string">&#x27;; KILL &#x27;</span><span class="operator">+</span>RTRIM(SPID)</span><br><span class="line"><span class="keyword">FROM</span> master..sysprocesses</span><br><span class="line"><span class="keyword">WHERE</span> dbid<span class="operator">=</span>DB_ID(<span class="string">&#x27;uyoufinancial&#x27;</span>);</span><br><span class="line"><span class="keyword">EXEC</span>(<span class="variable">@SQL</span>);</span><br><span class="line"><span class="keyword">ALTER</span> DATABASE uyoufinancial <span class="keyword">SET</span> MULTI_USER;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sqlserver命令汇总&quot;&gt;&lt;a href=&quot;#sqlserver命令汇总&quot; class=&quot;headerlink&quot; title=&quot;sqlserver命令汇总&quot;&gt;&lt;/a&gt;sqlserver命令汇总&lt;/h1&gt;&lt;p&gt;1.单用户变为多用户&lt;/p&gt;
   &lt;figure </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>榕宝</title>
    <link href="http://example.com/2022/07/29/%E6%A6%95%E5%AE%9D/"/>
    <id>http://example.com/2022/07/29/%E6%A6%95%E5%AE%9D/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:10:17.176Z</updated>
    
    <content type="html"><![CDATA[<p>爱做饭给榕宝吃，做一辈子的饭。</p><p>重要的不是什么都拥有，而是你想要的恰好在身边</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;爱做饭给榕宝吃，做一辈子的饭。&lt;/p&gt;
&lt;p&gt;重要的不是什么都拥有，而是你想要的恰好在身边&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix的安装部署</title>
    <link href="http://example.com/2022/07/29/zabbix/"/>
    <id>http://example.com/2022/07/29/zabbix/</id>
    <published>2022-07-29T03:13:29.000Z</published>
    <updated>2022-07-29T04:21:03.727Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-2-1zabbix的安装部署"><a href="#1-2-1zabbix的安装部署" class="headerlink" title="1.2.1zabbix的安装部署"></a>1.2.1zabbix的安装部署</h1><h2 id="一、server端（监控端）安装配置"><a href="#一、server端（监控端）安装配置" class="headerlink" title="一、server端（监控端）安装配置"></a>一、server端（监控端）安装配置</h2><p>1.永久关闭防火墙和selinux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop firewalld关闭防火墙</span><br><span class="line">[root@localhost ~]# systemctl disable firewalld永久关闭防火墙</span><br><span class="line">[root@localhost ~]# setenforce 0临时关闭</span><br><span class="line">[root@localhost ~]# vi /etc/selinux/config永久关闭</span><br><span class="line">                    SELINUX=enforcing修改为&quot;SELINUX=disabled&quot;</span><br></pre></td></tr></table></figure><p>2.安装zabbix的yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Zabbix源:</span><br><span class="line">[root@localhost ~]#rpm -ivh http://repo.zabbix.com/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-2.el7.noarch.rpm</span><br><span class="line">epel源：[root@localhost ~]#wget https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">阿里源: </span><br><span class="line">[root@localhost ~]#curl –o /etc/yum.repos.d/Ali.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.安装zabbix服务器 前端 代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#yum –y install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line">安装mariadb：</span><br><span class="line">[root@localhost ~]#yum install –y mariadb mariadb-server</span><br><span class="line">启动mariadb：</span><br><span class="line">[root@localhost ~]#systemctl start mariadb</span><br><span class="line">初始化mariadb：</span><br><span class="line">[root@localhost ~]#mysql_secure_installation</span><br><span class="line"></span><br><span class="line">1.回车，如果不行，输入原来的数据库root密码然后回车</span><br><span class="line">2.按Y（是否设置root密码）</span><br><span class="line">newpassword：密码</span><br><span class="line">3.</span><br><span class="line">4.</span><br><span class="line">.....全程回车</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.创建初始数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">登陆mariadb</span><br><span class="line">[root@localhost ~]# mysql –u root –p‘密码’</span><br><span class="line">创建一个zabbix数据库并且设置字符集：</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create database zabbix character srt utf8 collate utf8_bin;</span></span><br><span class="line"></span><br><span class="line">创建一个用户zabbix并设置权限允许该用户访问的库和密码：</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">grant all privileges on zabbix.* to zabbix@’%’identified by ‘zabbix’; ----给用户设置密码</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">flush privileges; -----刷新授权表</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">quit;-----退出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.导入的初始架构和数据。将提示您输入新创建的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql – uzabbix –p zabbix </span><br><span class="line">输入密码：zabbix</span><br><span class="line">zcat：看所有包的内容但是不会解压缩。</span><br></pre></td></tr></table></figure><p>6.zabbix服务器端配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix -------zabbix mysql里面的用户的密码</span><br><span class="line"></span><br><span class="line">这里的配置文件打开后：如果有的就不用添加了。如果是注释了的也不用取消注释。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>7.Zabbix服务器和代理服务器进程启动，设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl start zabbix-server zabbix-agent httpd</span><br><span class="line">[root@localhost ~]# systemctl enable zabbix-server zabbix-agent httpd</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8.配置php zabbix 前端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Apache的配置文件为Zabbix前端位于/etc/ httpd / conf.d/zabbix.conf一些PHP设置已经配置好了。但是有必要取消“日期。时区”设置正确的时区。</span><br><span class="line">[root@localhost ~]# vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value max_execution_time 300</span><br><span class="line">php_value memory_limit 128M</span><br><span class="line">php_value post_max_size 16M</span><br><span class="line">php_value upload_max_filesize 2M</span><br><span class="line">php_value max_input_time 300</span><br><span class="line">php_value always_populate_raw_post_data -1</span><br><span class="line">[root@localhost ~]# php_value date.timezone Europe/Riga</span><br><span class="line">php_value date.timezone Asia/Shanghai -------时区设置为亚洲上海</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9.重新启动httpd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl restart zabbix-server zabbix-agent httpd mariadb (mysqld)</span><br></pre></td></tr></table></figure><p>10.访问zabbix</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在浏览器访问ip/zabbix：</span><br><span class="line">并且进行设置：就第一步输入mysql密码。然后一直下一步。</span><br><span class="line">最后登陆：</span><br><span class="line">username: Admin</span><br><span class="line">password: zabbix</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二、agent（被监控端）端安装配置"><a href="#二、agent（被监控端）端安装配置" class="headerlink" title="二、agent（被监控端）端安装配置"></a>二、agent（被监控端）端安装配置</h2><h3 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h3><p>1.永久关闭防火墙和selinux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop firewalld关闭防火墙</span><br><span class="line">[root@localhost ~]# systemctl disable firewalld永久关闭防火墙</span><br><span class="line">[root@localhost ~]# setenforce 0临时关闭</span><br><span class="line">[root@localhost ~]# vi /etc/selinux/config永久关闭</span><br><span class="line">                    SELINUX=enforcing修改为&quot;SELINUX=disabled&quot;</span><br></pre></td></tr></table></figure><p>2.安装zabbix的yum源.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Zabbix源:</span><br><span class="line">[root@localhost ~]#rpm -ivh http://repo.zabbix.com/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-2.el7.noarch.rpm</span><br><span class="line">epel源：</span><br><span class="line">[root@localhost ~]#wget https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">阿里源: </span><br><span class="line">[root@localhost ~]#curl –o /etc/yum.repos.d/Ali.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure><p>3.安装zabbix-agent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum –y install zabbix-agent</span><br></pre></td></tr></table></figure><p>4.编辑配置文件修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=服务器IP  被动模式 zabbix-server-ip 可以添加多个ip，可以被多台机器监控</span><br><span class="line">ServerActive=服务器IP  主动模式 zabbix-server-ip</span><br><span class="line">Hostname=web1 -------被监控机器的主机名称</span><br><span class="line">UnsafeUserParameters=1 ---添加是否限制用户自定义 keys 使用特殊字符</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.启动服务并设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl start zabbix-agent</span><br><span class="line">[root@localhost ~]# systemctl enable zabbix-agent</span><br><span class="line">查看端口： </span><br><span class="line">[root@localhost ~]# ss -anlp |grep :10050</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><p>1.导入源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Ubuntu 18.04</span></span></span><br><span class="line">[aisidi@localhost ~]# sudo wget https://repo.zabbix.com/zabbix/3.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.4-1+bionic_all.deb</span><br><span class="line">[aisidi@localhost ~]# sudo dpkg -i zabbix-release_3.4-1+bionic_all.deb</span><br><span class="line">[aisidi@localhost ~]# sudo apt update</span><br><span class="line">---</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Ubuntu 16.04</span></span></span><br><span class="line">[aisidi@localhost ~]# sudo wget https://repo.zabbix.com/zabbix/3.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.4-1+xenial_all.deb</span><br><span class="line">[aisidi@localhost ~]# sudo dpkg -i zabbix-release_3.4-1+xenial_all.deb</span><br><span class="line">[aisidi@localhost ~]# sudo apt update</span><br><span class="line">---</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Ubuntu 14.04</span></span></span><br><span class="line">[aisidi@localhost ~]# sudo wget https://repo.zabbix.com/zabbix/3.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.4-1+trusty_all.deb</span><br><span class="line">[aisidi@localhost ~]# sudo dpkg -i zabbix-release_3.4-1+trusty_all.deb</span><br><span class="line">[aisidi@localhost ~]# sudo apt update</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[aisidi@localhost ~]#sudo apt-get install -y zabbix-agent</span><br></pre></td></tr></table></figure><p>3.配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[aisidi@localhost ~]# sudo vim /etc/zabbix/zabbix_agentd.conf </span><br><span class="line">server=serverIP</span><br><span class="line">ServerActive=serverIP</span><br><span class="line">hostname=ubuntu（在zabbix-server上的主机要一致）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[aisidi@localhost ~]#sudo /etc/init.d/zabbix-agent start</span><br></pre></td></tr></table></figure><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>1.zabbix-agent下载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//www.zabbix.com/downloads/3.4.0/zabbix_agents_3.4.0.win.zip</span></span><br><span class="line">解压到C盘，并重命名目录为zabbix</span><br></pre></td></tr></table></figure><p>2.配置zabbix-agent.win.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">找到conf下的配置文件 zabbix_agentd.win.conf ，修改LogFile、Server、ServerActive 、Hostname这几个参数。具体配置如下：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">移动到C盘的zabbix目录下conf目录下，编辑zabbix_agentd.win.conf，修改下面几个参数</span></span><br><span class="line">Server=serverIP</span><br><span class="line">ServerActive=serverIP</span><br><span class="line">Hostname=Windows</span><br><span class="line">修改好配置文件后，用CMD（需有管理员权限）将Zabbix Agent安装为Windows系统的服务，在windows控制台下执行以下命令：</span><br><span class="line">C:\zabbix\bin\win64\zabbix_agentd.exe -i -c C:\zabbix\conf\zabbix_agentd.win.conf</span><br><span class="line">控制台输出信息如下，表示安装成功：</span><br><span class="line">zabbix_agentd.exe [4864]: service [Zabbix Agent] installed successfully</span><br><span class="line">zabbix_agentd.exe [4864]: event source [Zabbix Agent] installed successfully</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.启动zabbix-agent客户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\zabbix\bin\win64\zabbix_agentd.exe -c C:\zabbix\conf\zabbix_agentd.win.conf -s</span><br><span class="line">• 控制台输出下面信息，表示安装成功:</span><br><span class="line">zabbix_agentd.exe [<span class="number">11052</span>]: service [Zabbix Agent] started s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="centos-6"><a href="#centos-6" class="headerlink" title="centos 6"></a>centos 6</h3><p>1.下载rpm包 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#cd /opt </span><br><span class="line">[root@localhost ~]#wget http://repo.zabbix.com/zabbix/3.0/rhel/6/x86_64/zabbix-agent-3.0.4-1.el6.x86_64.rpm</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.安装zabbix_agentd </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#yum localinstall zabbix-agent-3.0.4-1.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><p>3.修改zabbix_agentd.conf </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">修改一下几项内容： </span><br><span class="line">Server= #填写zabbix服务器IP地址</span><br><span class="line">ServerActive=#填写zabbix服务器IP地址</span><br><span class="line">hostname=填写与客户端一致的主机名</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.启动zabbix_agentd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">因为我们这里直接安装的rpm包所以在/etc/init.d/目录下生成开机脚本 </span><br><span class="line">直接执行/etc/init.d/zabbix_agentd start 就ok。</span><br><span class="line">[root@localhost ~]# /etc/init.d/zabbix_agentd start</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>如果在服务器端上没看到数据的话就看看是不是端口未开放</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">centos6开放端口</span><br><span class="line">[root@localhost ~]#/sbin/iptables -I INPUT -p tcp --dport 10050 -j ACCEPT //开放端口</span><br><span class="line">[root@localhost ~]#/etc/rc.d/init.d/iptables save //保存</span><br><span class="line">[root@localhost ~]#/etc/init.d/iptables status //查看</span><br><span class="line">如果使用安装包安装，解压之后用rpm –ivh安装，配置和yum安装一样</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-2-1zabbix的安装部署&quot;&gt;&lt;a href=&quot;#1-2-1zabbix的安装部署&quot; class=&quot;headerlink&quot; title=&quot;1.2.1zabbix的安装部署&quot;&gt;&lt;/a&gt;1.2.1zabbix的安装部署&lt;/h1&gt;&lt;h2 id=&quot;一、server端</summary>
      
    
    
    
    
  </entry>
  
</feed>
